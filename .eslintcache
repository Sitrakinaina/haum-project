[{"C:\\Projet\\haum-project\\src\\index.jsx":"1","C:\\Projet\\haum-project\\src\\serviceWorker.js":"2","C:\\Projet\\haum-project\\src\\DialogContext.js":"3","C:\\Projet\\haum-project\\src\\App.jsx":"4","C:\\Projet\\haum-project\\src\\services\\meteo.js":"5","C:\\Projet\\haum-project\\src\\components\\Dialog.jsx":"6","C:\\Projet\\haum-project\\src\\components\\info\\Projectinfo.jsx":"7","C:\\Projet\\haum-project\\src\\components\\DialogMeteo.jsx":"8","C:\\Projet\\haum-project\\src\\components\\ActionButton.jsx":"9","C:\\Projet\\haum-project\\src\\components\\animation.js":"10"},{"size":599,"mtime":1659162522601,"results":"11","hashOfConfig":"12"},{"size":5227,"mtime":1659161928889,"results":"13","hashOfConfig":"12"},{"size":2507,"mtime":1663588848942,"results":"14","hashOfConfig":"12"},{"size":4367,"mtime":1663636246691,"results":"15","hashOfConfig":"12"},{"size":829,"mtime":1659161928890,"results":"16","hashOfConfig":"12"},{"size":6003,"mtime":1663636614633,"results":"17","hashOfConfig":"12"},{"size":3198,"mtime":1663636220848,"results":"18","hashOfConfig":"12"},{"size":2868,"mtime":1663588848944,"results":"19","hashOfConfig":"12"},{"size":754,"mtime":1659161928886,"results":"20","hashOfConfig":"12"},{"size":436,"mtime":1659161928888,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"iq2m2y",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Projet\\haum-project\\src\\index.jsx",[],["44","45"],"C:\\Projet\\haum-project\\src\\serviceWorker.js",[],"C:\\Projet\\haum-project\\src\\DialogContext.js",["46"],"import React, { createContext, useState } from \"react\";\r\nimport { getMeteoForCity, getMeteoForCityFake } from \"./services/meteo\";\r\nimport {useSpeechSynthesis} from \"react-speech-kit\"\r\nexport const DialogContext = createContext();\r\n\r\nconst initialState = {\r\n    dialogs: [\r\n        { msg: \"En quoi puis-je vous aider aujourd'hui?\", id: 0, user: false },\r\n    ],\r\n    city: [\"Antananarivo\", \"Mahajanga\", \"Paris\"],\r\n};\r\nexport const DialogProvider = ({ children }) => {\r\n    const [dialogs, setDialogs] = useState(initialState.dialogs);\r\n    const [loading, setLoading] = useState(false);\r\n    const [meteoDialog, setMeteo] = useState(false);\r\n    const {speak} = useSpeechSynthesis();\r\n    const getMeteo = async (city, msg = \"\") => {\r\n        console.log(\"city \", city);\r\n        setLoading(true);\r\n        closeMeteo();\r\n\r\n        try {\r\n            const response = await getMeteoForCity(city);\r\n            const data = response.data\r\n            console.log(\"response\", data);\r\n            replyUser(\r\n                `Meteo à ${city}: \r\n                Température ${Math.floor(data.main.temp)}° C,  ${\r\n                    data.weather[0].description\r\n                }`\r\n            );\r\n            setLoading(false);\r\n            return response;\r\n        } catch (error) {\r\n            setLoading(false);\r\n            console.error(error);\r\n            replyUser(\r\n                \"Ville non pris en charge pour le moment\"\r\n            );\r\n        }\r\n    };\r\n    const askForMeteo = () => {\r\n        setMeteo(true);\r\n    };\r\n    const closeMeteo = () => {\r\n        setMeteo(false);\r\n    };\r\n    const pushMessage = (msg = \"\", user = true) => {\r\n        setDialogs((prevState)=>[...prevState, { msg, id: prevState.length, user }]);\r\n    };\r\n    const sendRequest = (msg = \"\") => {\r\n        if (msg.length <= 0) return;\r\n        pushMessage(msg);\r\n    };\r\n    const replyUser = (msg = \"\") => {\r\n        if (msg.length <= 0) return;\r\n        speak({\r\n            text:msg\r\n        })\r\n        pushMessage(msg, false);\r\n    };\r\n    return (\r\n        <DialogContext.Provider\r\n            value={{\r\n                sendRequest,\r\n                id: dialogs.length,\r\n                dialogs,\r\n                city: initialState.city,\r\n                getMeteo,\r\n                meteoDialog,\r\n                askForMeteo,\r\n                replyUser,\r\n                closeMeteo,\r\n                loading,\r\n            }}\r\n        >\r\n            {children}\r\n        </DialogContext.Provider>\r\n    );\r\n};\r\n","C:\\Projet\\haum-project\\src\\App.jsx",["47"],"C:\\Projet\\haum-project\\src\\services\\meteo.js",[],"C:\\Projet\\haum-project\\src\\components\\Dialog.jsx",["48","49"],"C:\\Projet\\haum-project\\src\\components\\info\\Projectinfo.jsx",[],"C:\\Projet\\haum-project\\src\\components\\DialogMeteo.jsx",[],"C:\\Projet\\haum-project\\src\\components\\ActionButton.jsx",[],"C:\\Projet\\haum-project\\src\\components\\animation.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":2,"column":27,"nodeType":"56","messageId":"57","endLine":2,"endColumn":46},{"ruleId":"58","severity":1,"message":"59","line":28,"column":23,"nodeType":"60","endLine":28,"endColumn":33},{"ruleId":"54","severity":1,"message":"61","line":36,"column":12,"nodeType":"56","messageId":"57","endLine":36,"endColumn":18},{"ruleId":"58","severity":1,"message":"62","line":98,"column":8,"nodeType":"63","endLine":98,"endColumn":25,"suggestions":"64"},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'getMeteoForCityFake' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Assignments to the 'newDate' variable from inside React Hook useLayoutEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useLayoutEffect.","NewExpression","'listen' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'sendRequest'. Either include it or remove the dependency array.","ArrayExpression",["67"],"no-global-assign","no-unsafe-negation",{"desc":"68","fix":"69"},"Update the dependencies array to be: [finalTranscript, sendRequest]",{"range":"70","text":"71"},[3291,3308],"[finalTranscript, sendRequest]"]